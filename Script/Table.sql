CREATE TABLE PERSONA 
( 	CF CHAR(16) NOT NULL,
 	 Nome VARCHAR(25) NOT NULL,
 	 Cognome VARCHAR(25) NOT NULL,
  	 Data_Nascita DATE NOT NULL,
  	PRIMARY KEY (CF)
);

CREATE TABLE TELEFONO_PERSONA
( 	CF CHAR(16) NOT NULL,
 	 Numero CHAR(15) NOT NULL,
 	PRIMARY KEY (CF,Numero),
 	FOREIGN KEY (CF) REFERENCES PERSONA(CF)
 	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE TRAINER
( 	CF CHAR(16) NOT NULL,
 	PRIMARY KEY(CF),
 	FOREIGN KEY(CF) REFERENCES PERSONA(CF)
	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE QUALIFICA
(	 CF CHAR(16) NOT NULL,
  	Codice CHAR(20) NOT NULL,
 	 Descrizione VARCHAR(25),
 	PRIMARY KEY( CF,Codice),
  	FOREIGN KEY(CF) REFERENCES TRAINER(CF)
    	ON DELETE CASCADE ON UPDATE CASCADE,
	CHECK
	( Codice='101' AND Descrizione='Sala Pesi'
	OR Codice='102' AND Descrizione='Yoga'
	OR Codice='103' AND Descrizione='Boxe'
	)
);

CREATE TABLE ABBONATO
(	CF CHAR(16) NOT NULL,
 	Sconto INTEGER,
 	Indirizzo VARCHAR(35) NOT NULL,
	Email VARCHAR(40) NOT NULL,
 	PRIMARY KEY(CF),
 	FOREIGN KEY(CF) REFERENCES PERSONA(CF)
 	ON DELETE CASCADE ON UPDATE CASCADE	
);


CREATE TABLE VISITA_MEDICA
(	Id_Visita SERIAL NOT NULL,
 	Medico CHAR(20) NOT NULL,
 	Data_Scadenza DATE NOT NULL,
 	CF_Abbonato CHAR(16) NOT NULL,
 	PRIMARY KEY(Id_Visita,Medico),
 	FOREIGN KEY( CF_Abbonato) REFERENCES ABBONATO(CF)
 	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE ARMADIETTO
( 	Numero SERIAL NOT NULL,
  	Locazione VARCHAR(15) NOT NULL,
 	CF_Abbonato CHAR(16) NOT NULL,
 	PRIMARY KEY(Numero,Locazione),
 	FOREIGN KEY(CF_Abbonato) REFERENCES ABBONATO(CF)
 	ON DELETE CASCADE ON UPDATE CASCADE,
 	CHECK
 	(	Locazione='Primo Piano'
	 	OR Locazione='Secondo Piano'
	),
 	CHECK
 	( Numero>'0'
	 AND Numero<'100'
	)
);

CREATE TABLE TESSERA
( 	Numero_Tessera SERIAL NOT NULL,
  	CF_Abbonato CHAR(16) NOT NULL,
 	PRIMARY KEY(Numero_Tessera),
 	FOREIGN KEY(CF_Abbonato) REFERENCES ABBONATO(CF)
 	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE PREZZO_ABBONAMENTO
(	Tipologia CHAR(15) NOT NULL,
 	Costo INTEGER NOT NULL,
 	PRIMARY KEY(Tipologia)
 	
);

CREATE TABLE ABBONAMENTO
(	Id_Abbonamento SERIAL NOT NULL,
 	Data_Inizio DATE NOT NULL,
 	Data_Fine DATE NOT NULL,
 	CF_Abbonato CHAR(16) NOT NULL,
 	Tipologia CHAR(15) NOT NULL,
 	PRIMARY KEY(Id_Abbonamento),
 	FOREIGN KEY (CF_Abbonato) REFERENCES ABBONATO(CF)
 	ON DELETE CASCADE ON UPDATE CASCADE,
 	FOREIGN KEY (Tipologia) REFERENCES PREZZO_ABBONAMENTO(Tipologia)
 	ON DELETE CASCADE ON UPDATE CASCADE,
 	CHECK
 	( Data_Inizio < Data_Fine)
);

CREATE TABLE CHIUSURA_SETTIMANALE
(	Giorno CHAR(9) NOT NULL,
 	CF_Trainer CHAR(16) NOT NULL,
 	PRIMARY KEY (Giorno,CF_Trainer),
 	FOREIGN KEY(CF_Trainer) REFERENCES TRAINER(CF)
 	ON DELETE CASCADE ON UPDATE CASCADE,
 	CHECK
 	( 	Giorno='Lunedì'
	 	OR Giorno='Martedì'
	 	OR Giorno='Mercoledì'
	 	OR Giorno='Giovedì'
	 	OR Giorno='Venerdì'
	 	OR Giorno='Sabato'
	 	OR Giorno='Domenica'
	)
);

CREATE TABLE SCHEDA_ALLENAMENTO
(	CF_Abbonato CHAR(16) NOT NULL,
 	Id_Scheda SERIAL UNIQUE NOT NULL,
 	CF_Trainer CHAR(16)  NOT NULL,
    	Data_Inizio DATE NOT NULL,
 	Data_Fine DATE NOT NULL,
 	PRIMARY KEY(Id_Scheda),
 	FOREIGN KEY(CF_Abbonato) REFERENCES ABBONATO(CF)
 	ON DELETE CASCADE ON UPDATE CASCADE,
 	FOREIGN KEY(CF_Trainer) REFERENCES TRAINER(CF)
 	ON DELETE CASCADE ON UPDATE CASCADE,
 	CHECK 
 (	Data_Fine > Data_Inizio	)
);

CREATE TABLE ESERCIZIO
( 	Nome VARCHAR(35) NOT NULL,
 	Muscolo VARCHAR(20) NOT NULL,
 	PRIMARY KEY(Nome)
);

CREATE TABLE COMPOSIZIONE_SCHEDA
(	Id_Scheda SERIAL NOT NULL,
	Nome_Esercizio VARCHAR(35) NOT NULL,
 	Numero_Allenamento INTEGER,
 	Ripetizioni INTEGER NOT NULL,
 	Serie INTEGER NOT NULL,
 	Recupero INTEGER NOT NULL,
 	Carico INTEGER NOT NULL,
 	PRIMARY KEY( Id_Scheda,Nome_Esercizio),
 	FOREIGN KEY( Id_Scheda) REFERENCES SCHEDA_ALLENAMENTO(Id_Scheda)
 	ON DELETE CASCADE ON UPDATE CASCADE,
 	FOREIGN KEY (Nome_Esercizio) REFERENCES ESERCIZIO(Nome)
 	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE CORSO
( 	Codice_corso SERIAL NOT NULL,
 	CF_Trainer CHAR(16) NOT NULL,
 	Descrizione VARCHAR(50) NOT NULL,
 	Tipologia VARCHAR(30) NOT NULL,
 	PRIMARY KEY( Codice_Corso),
 	FOREIGN KEY(CF_Trainer) REFERENCES TRAINER(CF)
 	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE ISCRIZIONE_CORSO
( 	CF_Abbonato CHAR(16) NOT NULL,
 	Codice_Corso SERIAL NOT NULL,
 	PRIMARY KEY( CF_Abbonato,Codice_Corso),
 	FOREIGN KEY(CF_Abbonato) REFERENCES ABBONATO(CF)
 	ON DELETE CASCADE ON UPDATE CASCADE,
 	FOREIGN KEY(Codice_Corso) REFERENCES CORSO(Codice_Corso)
 	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE SALA
(	Numero_Sala INTEGER NOT NULL,
 	PRIMARY KEY(Numero_Sala)
);

CREATE TABLE ORARIO
(	Numero_Sala INTEGER NOT NULL,
 	Giorno CHAR(9) NOT NULL,
 	Ora TIME NOT NULL,	
 	Codice_Corso SERIAL NOT NULL,
 	PRIMARY KEY(Numero_Sala,Giorno,Ora),
 	FOREIGN KEY(Numero_Sala) REFERENCES SALA(Numero_Sala)
 	ON DELETE CASCADE ON UPDATE CASCADE,
 	FOREIGN KEY(Codice_Corso) REFERENCES CORSO(Codice_Corso)
 	ON DELETE CASCADE ON UPDATE CASCADE,
 	UNIQUE(Codice_Corso,Giorno,Ora),
 	CHECK
 	( 	Giorno='Lunedì'
	 	OR Giorno='Martedì'
	 	OR Giorno='Mercoledì'
	 	OR Giorno='Giovedì'
	 	OR Giorno='Venerdì'
	 	OR Giorno='Sabato'
	 	OR Giorno='Domenica'
	)
 
);